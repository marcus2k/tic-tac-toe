[{"/Users/marcus/Desktop/workspace/tictactoe/src/App.js":"1","/Users/marcus/Desktop/workspace/tictactoe/src/reportWebVitals.js":"2","/Users/marcus/Desktop/workspace/tictactoe/src/Cell.js":"3","/Users/marcus/Desktop/workspace/tictactoe/src/index.js":"4","/Users/marcus/Desktop/workspace/tictactoe/src/TTTGrid.js":"5"},{"size":1550,"mtime":1607260063375,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1607245673053,"results":"8","hashOfConfig":"7"},{"size":713,"mtime":1607258516365,"results":"9","hashOfConfig":"7"},{"size":500,"mtime":1607253741718,"results":"10","hashOfConfig":"7"},{"size":1653,"mtime":1607258503347,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"13epihy",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/marcus/Desktop/workspace/tictactoe/src/App.js",["23","24","25","26"],"import { useState } from 'react';\nimport Grid from './TTTGrid.js';\nimport './App.css';\nimport Cell from './Cell.js';\n\n\nconst App = () => {\n  const [state, setState] = useState({\n    gridModel: [[null, null, null], [null, null, null], [null, null, null]],\n    currPlayer: 1, // 1 or 0\n    //winner: null, // 1, 0, or null\n    //full: false, // true, false\n  });\n  const { gridModel, currPlayer, winner, full } = state;\n  const handler = x => clicked(x); \n\n  const clicked = x => {\n    let [row, col, ...others] = x.split(\" \")\n    row = row[4]\n    col = col[4]\n    //spread syntax\n    let gridModelCopy = [[...gridModel[0]], [...gridModel[1]], [...gridModel[2]]];\n    gridModelCopy[row][col] = currPlayer;\n    setState({\n      gridModel: gridModelCopy,\n      currPlayer: 1 - currPlayer,\n      //winner: hasWinner(gridModelCopy),\n      //full: isFull(gridModelCopy)\n    })\n    // for debugging: alert(row + \" \" + col) // replace alert with updateStates function!!!\n  }\n\n  return (\n    <div className=\"App\">\n      <Grid gridModel={gridModel} notifyApp={handler} />\n    </div>\n  );\n  \n\n  /*\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n  */\n}\n\nexport default App;\n","/Users/marcus/Desktop/workspace/tictactoe/src/reportWebVitals.js",[],"/Users/marcus/Desktop/workspace/tictactoe/src/Cell.js",["27"],"/Users/marcus/Desktop/workspace/tictactoe/src/index.js",[],"/Users/marcus/Desktop/workspace/tictactoe/src/TTTGrid.js",[],{"ruleId":"28","severity":1,"message":"29","line":4,"column":8,"nodeType":"30","messageId":"31","endLine":4,"endColumn":12},{"ruleId":"28","severity":1,"message":"32","line":14,"column":34,"nodeType":"30","messageId":"31","endLine":14,"endColumn":40},{"ruleId":"28","severity":1,"message":"33","line":14,"column":42,"nodeType":"30","messageId":"31","endLine":14,"endColumn":46},{"ruleId":"28","severity":1,"message":"34","line":18,"column":23,"nodeType":"30","messageId":"31","endLine":18,"endColumn":29},{"ruleId":"35","severity":1,"message":"36","line":18,"column":42,"nodeType":"37","messageId":"38","endLine":18,"endColumn":44},"no-unused-vars","'Cell' is defined but never used.","Identifier","unusedVar","'winner' is assigned a value but never used.","'full' is assigned a value but never used.","'others' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]