[{"/Users/marcus/Desktop/workspace/tictactoe/src/App.js":"1","/Users/marcus/Desktop/workspace/tictactoe/src/reportWebVitals.js":"2","/Users/marcus/Desktop/workspace/tictactoe/src/index.js":"3","/Users/marcus/Desktop/workspace/tictactoe/src/components/Game.js":"4","/Users/marcus/Desktop/workspace/tictactoe/src/components/Grid.js":"5","/Users/marcus/Desktop/workspace/tictactoe/src/components/Cell.js":"6"},{"size":132,"mtime":1607312850837,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1607245673053,"results":"9","hashOfConfig":"8"},{"size":508,"mtime":1607282195377,"results":"10","hashOfConfig":"8"},{"size":3154,"mtime":1607312725828,"results":"11","hashOfConfig":"8"},{"size":1820,"mtime":1607312721233,"results":"12","hashOfConfig":"8"},{"size":745,"mtime":1607312707583,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"13epihy",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},"/Users/marcus/Desktop/workspace/tictactoe/src/App.js",[],["28","29"],"/Users/marcus/Desktop/workspace/tictactoe/src/reportWebVitals.js",[],"/Users/marcus/Desktop/workspace/tictactoe/src/index.js",[],"/Users/marcus/Desktop/workspace/tictactoe/src/components/Game.js",[],"/Users/marcus/Desktop/workspace/tictactoe/src/components/Grid.js",[],"/Users/marcus/Desktop/workspace/tictactoe/src/components/Cell.js",["30"],"import './assets/css/Cell.css';\nimport x from './assets/img/x.png';\nimport o from './assets/img/o.png';\n\nconst Cell = (props) => {\n    const { classes, content, notifyGrid } = props;\n    const handler = () => notifyGrid(classes);\n\n    /* // debugging statements\n    console.log(content);\n    console.log(props.hasOwnProperty(\"content\") ? \"Cell is filled\" : \"Cell is empty\");\n    console.log(\"Cell component loaded\");\n    */\n\n    if (props.content != null) {\n        const symbol = <img src={content == 0 ? o : x} alt=\"cross\"></img>;\n        return(\n            <td className={classes}>\n                {symbol}\n            </td>\n        );\n    }\n\n    return(\n        <td className={classes} onClick={handler}></td>\n    );\n}\n\nexport default Cell;",{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":16,"column":42,"nodeType":"37","messageId":"38","endLine":16,"endColumn":44},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]